/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import entity.Account;
import entity.Student;
import entity.Subject;
import entity.Teacher;
import entity.Class;
import entity.Mark;
import java.awt.Toolkit;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.ParsePosition;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.AccountDAO;
import model.ClassDAO;
import model.DBConnection;
import model.MarkDAO;
import model.StudentDAO;
import model.SubjectDAO;
import model.TeacherDAO;

/**
 *
 * @author FirePhoenix
 */
public class StudentManager extends javax.swing.JFrame {

    private DBConnection dbconn = new DBConnection();
    private StudentDAO studentDAO = new StudentDAO(dbconn);
    private final ClassDAO classDAO = new ClassDAO(dbconn);
    private TeacherDAO teacherDAO = new TeacherDAO(dbconn);
    private SubjectDAO subjectDAO = new SubjectDAO(dbconn);
    private MarkDAO markDAO = new MarkDAO(dbconn);
    private AccountDAO accountDAO = new AccountDAO(dbconn);
    private Account session = null;
    //private final pnlTeacherMag pnlTM = new pnlTeacherMag();
    /**
     * Creates new form StudentManager
     */
    DefaultTableModel tableModel;

    public StudentManager() {
        initComponents();
        showComboData();
        showClassCode();
        showSubjectCode();
        //pnlTeacherMag.setVisible(false);
        //tblStudent = new JTable();
        //jScrollPane1 = new JScrollPane(tblStudent);
        //Table.add(jScrollPane1);
        tableModel = (DefaultTableModel) tblStudent.getModel();
        showStudent();
        showDynamicClass();
        
        dtcBirthday.setDate(new java.util.Date(System.currentTimeMillis()));
        pnlTeacherManagement.setVisible(false);
        pnlSubjectManagement.setVisible(false);
        pnlClassManagement.setVisible(false);
        pnlMarkManagement.setVisible(false);
        Table.setVisible(true);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);
        btnLogout.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlIndex = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        pasPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        pnlLookMark = new javax.swing.JPanel();
        lblGreetStu = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        btnLookMyMark = new javax.swing.JButton();
        pnlMarkTable = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblMarkForCheck = new javax.swing.JTable();
        btnCheckMark = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        txtReClassName = new javax.swing.JTextField();
        pnlMarkClass = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblMarkByClass = new javax.swing.JTable();
        pnlRegisterClass = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblDynamicClass = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        btnRegisterClass = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblRealClass = new javax.swing.JTable();
        btnDisposeClass = new javax.swing.JButton();
        pnlManagement = new javax.swing.JPanel();
        inforUser = new javax.swing.JPanel();
        lblGreetMag = new javax.swing.JLabel();
        Banner = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ManagementControll = new javax.swing.JPanel();
        btnStudentMag = new javax.swing.JButton();
        btnTeacherMag = new javax.swing.JButton();
        btnMarkMag = new javax.swing.JButton();
        btnClassMag = new javax.swing.JButton();
        btnSubjectMag = new javax.swing.JButton();
        Centre = new javax.swing.JPanel();
        pnlTeacherManagement = new javax.swing.JPanel();
        Table1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTeacher = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtTeacherCode = new javax.swing.JTextField();
        txtTcName = new javax.swing.JTextField();
        cmbSubjectCode = new javax.swing.JComboBox<>();
        dtcTcBirthday = new com.toedter.calendar.JDateChooser();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        cmbTcSex = new javax.swing.JComboBox<>();
        txtTcPhoneNumber = new javax.swing.JTextField();
        btnAddTc = new javax.swing.JButton();
        btnUpdateTc = new javax.swing.JButton();
        btnDeleteTc = new javax.swing.JButton();
        btnResetTc = new javax.swing.JButton();
        cmbClCode = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        cmbTcOrder = new javax.swing.JComboBox<>();
        btnTcAsc = new javax.swing.JButton();
        btnTcDesc = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        txtLookTc = new javax.swing.JTextField();
        btnLookTc = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        pnlSubjectManagement = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblSubject = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        txtSubjectCode = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtSubjectName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtCredit = new javax.swing.JTextField();
        btnAddSu = new javax.swing.JButton();
        btnUpdateSu = new javax.swing.JButton();
        btnDeleteSu = new javax.swing.JButton();
        btnResetSu = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        txtLookSu = new javax.swing.JTextField();
        btnLookSu = new javax.swing.JButton();
        Table = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtStudentCode = new javax.swing.JTextField();
        txtFullName = new javax.swing.JTextField();
        cmbClassCode = new javax.swing.JComboBox<>();
        dtcBirthday = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        cmbSex = new javax.swing.JComboBox<>();
        txtPhoneNumber = new javax.swing.JTextField();
        btnAddS = new javax.swing.JButton();
        btnUpdateS = new javax.swing.JButton();
        btnDeleteS = new javax.swing.JButton();
        btnResetS = new javax.swing.JButton();
        cmbEduSystem = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cmbOrder = new javax.swing.JComboBox<>();
        btnAsc = new javax.swing.JButton();
        btnDesc = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        txtStLookup = new javax.swing.JTextField();
        btnLookSt = new javax.swing.JButton();
        pnlClassManagement = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblClass = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        txtClassCode = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtClassName = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtCourse = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtLookCl = new javax.swing.JTextField();
        btnAddCl = new javax.swing.JButton();
        btnUpdateCl = new javax.swing.JButton();
        btnDeleteCl = new javax.swing.JButton();
        btnResetCl = new javax.swing.JButton();
        btnLookCl = new javax.swing.JButton();
        pnlMarkManagement = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMark = new javax.swing.JTable();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        txtRMark2 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtRMark3 = new javax.swing.JTextField();
        btnUpdateMark = new javax.swing.JButton();
        txtRMark1 = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtSuName = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        txtStudentCode_m = new javax.swing.JTextField();
        txtMarkQuantity = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txtExamMark = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        txtStudentName = new javax.swing.JTextField();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý điểm sinh viên");
        setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        setName("qlSinhVien"); // NOI18N
        setPreferredSize(new java.awt.Dimension(736, 758));

        jLabel49.setBackground(new java.awt.Color(102, 255, 255));
        jLabel49.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Phần mềm quản lí điểm sinh viên");
        jLabel49.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(0, 255, 51));

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel50.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("Đăng nhập");

        jLabel51.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel51.setText("Tên đăng nhập:");

        txtUserName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel52.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel52.setText("Mật khẩu:");

        btnLogin.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLogin.setText("Đăng nhập");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        btnLogout.setText("Đăng xuất");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUserName)
                    .addComponent(pasPassword))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btnLogin)
                .addGap(33, 33, 33)
                .addComponent(btnLogout)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pasPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin)
                    .addComponent(btnLogout))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(386, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(379, 379, 379))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(301, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlIndexLayout = new javax.swing.GroupLayout(pnlIndex);
        pnlIndex.setLayout(pnlIndexLayout);
        pnlIndexLayout.setHorizontalGroup(
            pnlIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlIndexLayout.setVerticalGroup(
            pnlIndexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIndexLayout.createSequentialGroup()
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trang chủ", pnlIndex);

        pnlLookMark.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGreetStu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblGreetStu.setText("Xin chào");
        pnlLookMark.add(lblGreetStu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 153, 110));

        jLabel47.setBackground(new java.awt.Color(51, 204, 255));
        jLabel47.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("Bảng điểm");
        jLabel47.setOpaque(true);
        pnlLookMark.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 11, 991, 110));

        btnLookMyMark.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLookMyMark.setText("Xem điểm của tôi");
        btnLookMyMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookMyMarkActionPerformed(evt);
            }
        });
        pnlLookMark.add(btnLookMyMark, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 149, -1, -1));

        tblMarkForCheck.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tên môn học", "Số lượng điểm thành phần", "Điểm thành phần 1", "Điểm thành phần 2", "Điểm thành phần 3", "Điểm kiểm tra", "Điểm tổng kết", "Kết quả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMarkForCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMarkForCheckMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblMarkForCheck);

        javax.swing.GroupLayout pnlMarkTableLayout = new javax.swing.GroupLayout(pnlMarkTable);
        pnlMarkTable.setLayout(pnlMarkTableLayout);
        pnlMarkTableLayout.setHorizontalGroup(
            pnlMarkTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMarkTableLayout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 1122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMarkTableLayout.setVerticalGroup(
            pnlMarkTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMarkTableLayout.createSequentialGroup()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pnlLookMark.add(pnlMarkTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 192, -1, 438));

        btnCheckMark.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCheckMark.setText("Xem điểm theo lớp");
        btnCheckMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckMarkActionPerformed(evt);
            }
        });
        pnlLookMark.add(btnCheckMark, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 149, -1, -1));

        jLabel48.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel48.setText("Tên lớp:");
        pnlLookMark.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(169, 153, -1, -1));

        txtReClassName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        pnlLookMark.add(txtReClassName, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 150, 256, -1));

        tblMarkByClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã sinh viên", "Số lượng điểm thành phần", "Điểm thành phần 1", "Điểm thành phần 2", "Điểm thành phần 3", "Điểm kiểm tra", "Điểm tổng kết", "Kết quả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tblMarkByClass);

        javax.swing.GroupLayout pnlMarkClassLayout = new javax.swing.GroupLayout(pnlMarkClass);
        pnlMarkClass.setLayout(pnlMarkClassLayout);
        pnlMarkClassLayout.setHorizontalGroup(
            pnlMarkClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1151, Short.MAX_VALUE)
            .addGroup(pnlMarkClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlMarkClassLayout.createSequentialGroup()
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlMarkClassLayout.setVerticalGroup(
            pnlMarkClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
            .addGroup(pnlMarkClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlMarkClassLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlLookMark.add(pnlMarkClass, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 1150, 440));

        jTabbedPane1.addTab("Xem điểm", pnlLookMark);

        tblDynamicClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã lớp", "Mã môn", "Tên môn học", "Tên giáo viên", "Số điện thoại"
            }
        ));
        jScrollPane5.setViewportView(tblDynamicClass);

        jLabel35.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Danh sách các lớp học");

        btnRegisterClass.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnRegisterClass.setText("Đăng kí");
        btnRegisterClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterClassActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Danh sách các lớp đã đăng kí");

        tblRealClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã lớp", "Môn", "Tên giáo viên"
            }
        ));
        jScrollPane6.setViewportView(tblRealClass);

        btnDisposeClass.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDisposeClass.setText("Hủy đăng ký");
        btnDisposeClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisposeClassActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlRegisterClassLayout = new javax.swing.GroupLayout(pnlRegisterClass);
        pnlRegisterClass.setLayout(pnlRegisterClassLayout);
        pnlRegisterClassLayout.setHorizontalGroup(
            pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                        .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)))
                        .addGap(31, 31, 31)
                        .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDisposeClass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegisterClass, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(456, Short.MAX_VALUE))
        );
        pnlRegisterClassLayout.setVerticalGroup(
            pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(btnRegisterClass))
                    .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlRegisterClassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlRegisterClassLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(btnDisposeClass)))
                .addContainerGap(223, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Đăng ký học phần", pnlRegisterClass);

        pnlManagement.setPreferredSize(new java.awt.Dimension(850, 719));
        pnlManagement.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inforUser.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        inforUser.setName("inforUser"); // NOI18N

        lblGreetMag.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblGreetMag.setText("Xin chào!");

        javax.swing.GroupLayout inforUserLayout = new javax.swing.GroupLayout(inforUser);
        inforUser.setLayout(inforUserLayout);
        inforUserLayout.setHorizontalGroup(
            inforUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inforUserLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGreetMag, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                .addContainerGap())
        );
        inforUserLayout.setVerticalGroup(
            inforUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inforUserLayout.createSequentialGroup()
                .addComponent(lblGreetMag, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlManagement.add(inforUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 120));

        jLabel1.setBackground(new java.awt.Color(255, 204, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lý sinh viên");

        javax.swing.GroupLayout BannerLayout = new javax.swing.GroupLayout(Banner);
        Banner.setLayout(BannerLayout);
        BannerLayout.setHorizontalGroup(
            BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BannerLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                .addGap(187, 187, 187))
        );
        BannerLayout.setVerticalGroup(
            BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BannerLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleParent(Banner);

        pnlManagement.add(Banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(185, 0, 970, 120));
        Banner.getAccessibleContext().setAccessibleParent(pnlManagement);

        ManagementControll.setBackground(new java.awt.Color(153, 204, 255));
        ManagementControll.setBorder(javax.swing.BorderFactory.createTitledBorder("menu"));
        ManagementControll.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ManagementControll.setName("Management Controll"); // NOI18N

        btnStudentMag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnStudentMag.setText("Quản lý sinh viên");
        btnStudentMag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentMagActionPerformed(evt);
            }
        });

        btnTeacherMag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTeacherMag.setText("Quản lý giáo viên");
        btnTeacherMag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTeacherMagActionPerformed(evt);
            }
        });

        btnMarkMag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnMarkMag.setText("Quản lý điểm");
        btnMarkMag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarkMagActionPerformed(evt);
            }
        });

        btnClassMag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnClassMag.setText("Quản lý lớp");
        btnClassMag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClassMagActionPerformed(evt);
            }
        });

        btnSubjectMag.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSubjectMag.setText("Quản lý môn");
        btnSubjectMag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubjectMagActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ManagementControllLayout = new javax.swing.GroupLayout(ManagementControll);
        ManagementControll.setLayout(ManagementControllLayout);
        ManagementControllLayout.setHorizontalGroup(
            ManagementControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagementControllLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManagementControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnStudentMag, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(btnTeacherMag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMarkMag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClassMag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSubjectMag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ManagementControllLayout.setVerticalGroup(
            ManagementControllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagementControllLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnStudentMag)
                .addGap(34, 34, 34)
                .addComponent(btnTeacherMag)
                .addGap(29, 29, 29)
                .addComponent(btnMarkMag)
                .addGap(31, 31, 31)
                .addComponent(btnClassMag)
                .addGap(32, 32, 32)
                .addComponent(btnSubjectMag)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        pnlManagement.add(ManagementControll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, -1, 509));
        ManagementControll.getAccessibleContext().setAccessibleParent(pnlManagement);

        Centre.setPreferredSize(new java.awt.Dimension(910, 510));
        Centre.setLayout(new java.awt.CardLayout());

        Table1.setBackground(new java.awt.Color(255, 255, 255));

        tblTeacher.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblTeacher.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã giáo viên", "Họ và tên", "Mã môn dạy", "Mã lớp", "Ngày sinh", "Giới tính", "Email", "Số điện thoại"
            }
        ));
        tblTeacher.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblTeacher.setName("tblSinhVien"); // NOI18N
        tblTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTeacherMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTeacher);
        if (tblTeacher.getColumnModel().getColumnCount() > 0) {
            tblTeacher.getColumnModel().getColumn(6).setPreferredWidth(150);
        }

        jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel14.setText("Mã giáo viên:");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setText("Họ và tên:");

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setText("Mã môn dạy:");

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setText("Mã lớp:");

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setText("Ngày sinh:");

        txtTeacherCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTeacherCode.setName("txtStudentCode"); // NOI18N
        txtTeacherCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeacherCodeActionPerformed(evt);
            }
        });

        txtTcName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTcName.setName("txtFullName"); // NOI18N

        cmbSubjectCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbSubjectCode.setName("cmbClassCode"); // NOI18N

        dtcTcBirthday.setName("dtcBirthday"); // NOI18N

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setText("Email:");
        jLabel19.setName(""); // NOI18N

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setText("Số điện thoại:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setText("Giới tính:");

        txtEmail.setName("txtAddress"); // NOI18N

        cmbTcSex.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbTcSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        txtTcPhoneNumber.setName("txtPhoneNumber"); // NOI18N

        btnAddTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddTc.setText("Thêm");
        btnAddTc.setName("btnAddSV"); // NOI18N
        btnAddTc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTcActionPerformed(evt);
            }
        });

        btnUpdateTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdateTc.setText("Sửa");
        btnUpdateTc.setName("btnUpdateSV"); // NOI18N
        btnUpdateTc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTcActionPerformed(evt);
            }
        });

        btnDeleteTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDeleteTc.setText("Xóa");
        btnDeleteTc.setName("btnDeleteSV"); // NOI18N
        btnDeleteTc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTcActionPerformed(evt);
            }
        });

        btnResetTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnResetTc.setText("Nhập lại");
        btnResetTc.setName("btnResetSV"); // NOI18N
        btnResetTc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetTcActionPerformed(evt);
            }
        });

        cmbClCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setText("Sắp xếp:");

        cmbTcOrder.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbTcOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã giáo viên", "Họ và tên", "Mã môn dạy", "Mã lớp", "Ngày sinh", "Giới tính" }));

        btnTcAsc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTcAsc.setText("A-Z");
        btnTcAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTcAscActionPerformed(evt);
            }
        });

        btnTcDesc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnTcDesc.setText("Z-A");
        btnTcDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTcDescActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel28.setText("Tìm kiếm với tên giáo viên:");

        txtLookTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnLookTc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLookTc.setText("Tìm kiếm");
        btnLookTc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookTcActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Table1Layout = new javax.swing.GroupLayout(Table1);
        Table1.setLayout(Table1Layout);
        Table1Layout.setHorizontalGroup(
            Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Table1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Table1Layout.createSequentialGroup()
                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Table1Layout.createSequentialGroup()
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14))
                                .addGap(27, 27, 27)
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Table1Layout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbTcOrder, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtTeacherCode)
                                    .addComponent(txtTcName)
                                    .addComponent(cmbSubjectCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(57, 57, 57)
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel20)
                                    .addComponent(btnTcAsc)))
                            .addGroup(Table1Layout.createSequentialGroup()
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18))
                                .addGap(42, 42, 42)
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Table1Layout.createSequentialGroup()
                                        .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtLookTc, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Table1Layout.createSequentialGroup()
                                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dtcTcBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cmbClCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(236, 236, 236)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Table1Layout.createSequentialGroup()
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtEmail)
                                    .addGroup(Table1Layout.createSequentialGroup()
                                        .addComponent(cmbTcSex, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 261, Short.MAX_VALUE))
                                    .addComponent(txtTcPhoneNumber))
                                .addGap(18, 18, 18)
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAddTc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdateTc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDeleteTc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnResetTc)))
                            .addGroup(Table1Layout.createSequentialGroup()
                                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnTcDesc)
                                    .addComponent(btnLookTc))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        Table1Layout.setVerticalGroup(
            Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Table1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(cmbTcOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTcAsc)
                    .addComponent(btnTcDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTeacherCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddTc))
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Table1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtTcName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21)
                            .addComponent(cmbTcSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16)
                            .addComponent(cmbSubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(txtTcPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(cmbClCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Table1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnUpdateTc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteTc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResetTc)
                    .addGroup(Table1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel18))
                    .addComponent(dtcTcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(Table1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtLookTc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLookTc))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jLabel13.setBackground(new java.awt.Color(51, 0, 255));
        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Thông Tin Giáo Viên");
        jLabel13.setOpaque(true);

        javax.swing.GroupLayout pnlTeacherManagementLayout = new javax.swing.GroupLayout(pnlTeacherManagement);
        pnlTeacherManagement.setLayout(pnlTeacherManagementLayout);
        pnlTeacherManagementLayout.setHorizontalGroup(
            pnlTeacherManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTeacherManagementLayout.createSequentialGroup()
                .addGroup(pnlTeacherManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Table1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlTeacherManagementLayout.setVerticalGroup(
            pnlTeacherManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTeacherManagementLayout.createSequentialGroup()
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Table1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        Centre.add(pnlTeacherManagement, "card3");

        pnlSubjectManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlSubjectManagement.setOpaque(false);

        jLabel23.setBackground(new java.awt.Color(51, 0, 255));
        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Thông Tin Môn học");
        jLabel23.setOpaque(true);

        tblSubject.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblSubject.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblSubject.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Mã môn học", "Tên môn học", "Tín chỉ"
            }
        ));
        tblSubject.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblSubject.setName("tblSinhVien"); // NOI18N
        tblSubject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSubjectMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblSubject);

        jLabel24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel24.setText("Mã môn học:");

        txtSubjectCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSubjectCode.setName("txtStudentCode"); // NOI18N
        txtSubjectCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectCodeActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel25.setText("Tên môn học:");

        txtSubjectName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSubjectName.setName("txtFullName"); // NOI18N

        jLabel26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel26.setText("Tín chỉ:");

        txtCredit.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnAddSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddSu.setText("Thêm");
        btnAddSu.setName("btnAddSV"); // NOI18N
        btnAddSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSuActionPerformed(evt);
            }
        });

        btnUpdateSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdateSu.setText("Sửa");
        btnUpdateSu.setName("btnUpdateSV"); // NOI18N
        btnUpdateSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSuActionPerformed(evt);
            }
        });

        btnDeleteSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDeleteSu.setText("Xóa");
        btnDeleteSu.setName("btnDeleteSV"); // NOI18N
        btnDeleteSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSuActionPerformed(evt);
            }
        });

        btnResetSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnResetSu.setText("Nhập lại");
        btnResetSu.setName("btnResetSV"); // NOI18N
        btnResetSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSuActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel27.setText("Tìm kiếm với tên môn:");

        txtLookSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnLookSu.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLookSu.setText("Tìm kiếm");
        btnLookSu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookSuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSubjectManagementLayout = new javax.swing.GroupLayout(pnlSubjectManagement);
        pnlSubjectManagement.setLayout(pnlSubjectManagementLayout);
        pnlSubjectManagementLayout.setHorizontalGroup(
            pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 970, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
            .addGroup(pnlSubjectManagementLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSubjectManagementLayout.createSequentialGroup()
                        .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtSubjectCode)
                            .addComponent(txtCredit))
                        .addGap(18, 18, 18)
                        .addComponent(txtLookSu, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(184, 184, 184)
                .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteSu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnResetSu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddSu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateSu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLookSu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        pnlSubjectManagementLayout.setVerticalGroup(
            pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSubjectManagementLayout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSubjectManagementLayout.createSequentialGroup()
                        .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(txtSubjectCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel25)
                            .addComponent(txtSubjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlSubjectManagementLayout.createSequentialGroup()
                        .addComponent(btnAddSu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateSu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteSu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnResetSu)))
                .addGap(18, 18, 18)
                .addGroup(pnlSubjectManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtLookSu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLookSu))
                .addGap(0, 97, Short.MAX_VALUE))
        );

        Centre.add(pnlSubjectManagement, "card4");

        Table.setBackground(new java.awt.Color(255, 255, 255));
        Table.setOpaque(false);

        tblStudent.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblStudent.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Họ và tên", "Mã lớp", "Hệ đào tạo", "Ngày sinh", "Địa chỉ", "Giới tính", "Số điện thoại", "email"
            }
        ));
        tblStudent.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblStudent.setName("tblSinhVien"); // NOI18N
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);
        if (tblStudent.getColumnModel().getColumnCount() > 0) {
            tblStudent.getColumnModel().getColumn(5).setPreferredWidth(150);
        }
        tblStudent.getAccessibleContext().setAccessibleName("");
        tblStudent.getAccessibleContext().setAccessibleParent(Table);

        jLabel3.setBackground(new java.awt.Color(51, 0, 255));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Thông Tin Sinh Viên");
        jLabel3.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Mã sinh viên:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Họ và tên:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Mã lớp:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Hệ đào tạo:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setText("Ngày sinh:");

        txtStudentCode.setName("txtStudentCode"); // NOI18N
        txtStudentCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentCodeActionPerformed(evt);
            }
        });

        txtFullName.setName("txtFullName"); // NOI18N

        cmbClassCode.setName("cmbClassCode"); // NOI18N

        dtcBirthday.setName("dtcBirthday"); // NOI18N

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setText("Địa chỉ:");
        jLabel9.setName(""); // NOI18N

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setText("Số điện thoại:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Giới tính:");

        txtAddress.setName("txtAddress"); // NOI18N

        cmbSex.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbSex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));

        txtPhoneNumber.setName("txtPhoneNumber"); // NOI18N

        btnAddS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddS.setText("Thêm");
        btnAddS.setName("btnAddSV"); // NOI18N
        btnAddS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSActionPerformed(evt);
            }
        });

        btnUpdateS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdateS.setText("Sửa");
        btnUpdateS.setName("btnUpdateSV"); // NOI18N
        btnUpdateS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSActionPerformed(evt);
            }
        });

        btnDeleteS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDeleteS.setText("Xóa");
        btnDeleteS.setName("btnDeleteSV"); // NOI18N
        btnDeleteS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSActionPerformed(evt);
            }
        });

        btnResetS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnResetS.setText("Nhập lại");
        btnResetS.setName("btnResetSV"); // NOI18N
        btnResetS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSActionPerformed(evt);
            }
        });

        cmbEduSystem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbEduSystem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đại học", "Cao đẳng" }));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setText("Sắp xếp:");

        cmbOrder.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbOrder.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã sinh viên", "Họ và tên", "Mã lớp", "Ngày sinh", "Giới tính" }));

        btnAsc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAsc.setText("A-Z");
        btnAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAscActionPerformed(evt);
            }
        });

        btnDesc.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDesc.setText("Z-A");
        btnDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel29.setText("Tìm kiếm với tên sinh viên:");

        txtStLookup.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnLookSt.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLookSt.setText("Tìm kiếm");
        btnLookSt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookStActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TableLayout = new javax.swing.GroupLayout(Table);
        Table.setLayout(TableLayout);
        TableLayout.setHorizontalGroup(
            TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TableLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TableLayout.createSequentialGroup()
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TableLayout.createSequentialGroup()
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(22, 22, 22)
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(dtcBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                                    .addComponent(cmbEduSystem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(txtStLookup, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                                .addComponent(btnLookSt))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, TableLayout.createSequentialGroup()
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(TableLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(cmbOrder, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtStudentCode)
                                    .addComponent(txtFullName)
                                    .addComponent(cmbClassCode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(btnAsc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TableLayout.createSequentialGroup()
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAddress)
                                    .addGroup(TableLayout.createSequentialGroup()
                                        .addComponent(cmbSex, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 73, Short.MAX_VALUE))
                                    .addComponent(txtPhoneNumber))
                                .addGap(18, 18, 18)
                                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAddS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnUpdateS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnDeleteS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnResetS)))
                            .addGroup(TableLayout.createSequentialGroup()
                                .addComponent(btnDesc)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        TableLayout.setVerticalGroup(
            TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TableLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cmbOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAsc)
                    .addComponent(btnDesc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtStudentCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddS))
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TableLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(cmbSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(cmbClassCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cmbEduSystem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TableLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnUpdateS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteS)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResetS)
                    .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8)
                        .addComponent(dtcBirthday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(txtStLookup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLookSt))
                .addGap(28, 28, 28))
        );

        Centre.add(Table, "card2");

        pnlClassManagement.setBackground(new java.awt.Color(255, 255, 255));
        pnlClassManagement.setOpaque(false);

        jLabel30.setBackground(new java.awt.Color(51, 0, 255));
        jLabel30.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Thông Tin Lớp Học");
        jLabel30.setOpaque(true);

        tblClass.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblClass.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Mã lớp học", "Tên lớp học", "Khóa đào tạo"
            }
        ));
        tblClass.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblClass.setName("tblSinhVien"); // NOI18N
        tblClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClassMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblClass);

        jLabel31.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel31.setText("Mã lớp học:");

        txtClassCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtClassCode.setName("txtStudentCode"); // NOI18N
        txtClassCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClassCodeActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel32.setText("Tên lớp học:");

        txtClassName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtClassName.setName("txtFullName"); // NOI18N

        jLabel33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel33.setText("Khóa đào tạo:");

        txtCourse.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel34.setText("Tìm kiếm với tên lớp:");

        txtLookCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnAddCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnAddCl.setText("Thêm");
        btnAddCl.setName("btnAddSV"); // NOI18N
        btnAddCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClActionPerformed(evt);
            }
        });

        btnUpdateCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdateCl.setText("Sửa");
        btnUpdateCl.setName("btnUpdateSV"); // NOI18N
        btnUpdateCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateClActionPerformed(evt);
            }
        });

        btnDeleteCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnDeleteCl.setText("Xóa");
        btnDeleteCl.setName("btnDeleteSV"); // NOI18N
        btnDeleteCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteClActionPerformed(evt);
            }
        });

        btnResetCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnResetCl.setText("Nhập lại");
        btnResetCl.setName("btnResetSV"); // NOI18N
        btnResetCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetClActionPerformed(evt);
            }
        });

        btnLookCl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnLookCl.setText("Tìm kiếm");
        btnLookCl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLookClActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlClassManagementLayout = new javax.swing.GroupLayout(pnlClassManagement);
        pnlClassManagement.setLayout(pnlClassManagementLayout);
        pnlClassManagementLayout.setHorizontalGroup(
            pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4)
            .addGroup(pnlClassManagementLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClassManagementLayout.createSequentialGroup()
                        .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(txtClassCode)
                            .addComponent(txtCourse))
                        .addGap(18, 18, 18)
                        .addComponent(txtLookCl, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtClassName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnResetCl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteCl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdateCl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddCl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLookCl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                .addGap(205, 205, 205))
        );
        pnlClassManagementLayout.setVerticalGroup(
            pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlClassManagementLayout.createSequentialGroup()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlClassManagementLayout.createSequentialGroup()
                        .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(txtClassCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(txtClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlClassManagementLayout.createSequentialGroup()
                        .addComponent(btnAddCl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateCl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteCl)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnResetCl)
                .addGap(18, 18, 18)
                .addGroup(pnlClassManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtLookCl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLookCl))
                .addGap(0, 101, Short.MAX_VALUE))
        );

        Centre.add(pnlClassManagement, "card5");

        jLabel37.setBackground(new java.awt.Color(51, 0, 255));
        jLabel37.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Thông Tin Điểm Các Lớp");
        jLabel37.setOpaque(true);

        tblMark.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tblMark.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tblMark.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sinh viên", "Tên sinh viên", "Mã lớp", "Tên môn học", "Số lượng điểm thành phần", "Điểm thành phần 1", "Điểm thành phần 2", "Điểm thành phần 3", "Điểm kiểm tra", "Điểm tổng kết", "Đánh giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMark.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblMark.setName("tblSinhVien"); // NOI18N
        tblMark.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMarkMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblMark);
        if (tblMark.getColumnModel().getColumnCount() > 0) {
            tblMark.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblMark.getColumnModel().getColumn(4).setPreferredWidth(150);
            tblMark.getColumnModel().getColumn(5).setPreferredWidth(100);
            tblMark.getColumnModel().getColumn(6).setPreferredWidth(100);
            tblMark.getColumnModel().getColumn(7).setPreferredWidth(100);
            tblMark.getColumnModel().getColumn(10).setPreferredWidth(60);
        }

        jLabel38.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel38.setText("Điểm thành phần 1:");

        jLabel39.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel39.setText("Điểm thành phần 2:");

        txtRMark2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel40.setText("Điểm thành phần 3:");

        txtRMark3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnUpdateMark.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnUpdateMark.setText("Cập nhật điểm");
        btnUpdateMark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateMarkActionPerformed(evt);
            }
        });

        txtRMark1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel42.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel42.setText("Tên môn học:");

        txtSuName.setEditable(false);
        txtSuName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel43.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel43.setText("Mã sinh viên:");

        txtStudentCode_m.setEditable(false);
        txtStudentCode_m.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        txtMarkQuantity.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel41.setText("Số điểm thành phần:");

        jLabel44.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel44.setText("Điểm kiểm tra:");

        txtExamMark.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel45.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel45.setText("Tên sinh viên:");

        txtStudentName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlMarkManagementLayout = new javax.swing.GroupLayout(pnlMarkManagement);
        pnlMarkManagement.setLayout(pnlMarkManagementLayout);
        pnlMarkManagementLayout.setHorizontalGroup(
            pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
            .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                                .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                .addGap(31, 31, 31))
                            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel39))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtRMark2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtRMark1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtRMark3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtSuName, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStudentCode_m, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtMarkQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnUpdateMark))
                            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtExamMark, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        pnlMarkManagementLayout.setVerticalGroup(
            pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMarkManagementLayout.createSequentialGroup()
                .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel45)
                        .addComponent(txtStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStudentCode_m, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel43)))
                .addGap(18, 18, 18)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(txtExamMark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSuName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(17, 17, 17)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(txtMarkQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtRMark1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRMark2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addGap(18, 18, 18)
                .addGroup(pnlMarkManagementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtRMark3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateMark))
                .addGap(21, 21, 21))
        );

        Centre.add(pnlMarkManagement, "card6");

        pnlManagement.add(Centre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 970, 510));

        jTabbedPane1.addTab("Quản lý", pnlManagement);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtStudentCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentCodeActionPerformed

    private void btnAddSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSActionPerformed
        // TODO add your handling code here:

        int rs = addStudent();
        if (rs > 0) {
            showStudent();
            reset();
        }
    }//GEN-LAST:event_btnAddSActionPerformed

    private void btnResetSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_btnResetSActionPerformed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
        // TODO add your handling code here:
        int i = tblStudent.getSelectedRow();
        TableModel model = tblStudent.getModel();
        txtStudentCode.setText(model.getValueAt(i, 0).toString());
        txtFullName.setText(model.getValueAt(i, 1).toString());
        String classCode = model.getValueAt(i, 2).toString();
        cmbClassCode.setSelectedItem(classCode);
        String eduSystem = model.getValueAt(i, 3).toString();
        cmbEduSystem.setSelectedItem(eduSystem);
        //String birthday = model.getValueAt(i, 4).toString();
        //dtcBirthday.setDateFormatString(birthday);
        dtcBirthday.setDate((Date) model.getValueAt(i, 4));
        txtAddress.setText(model.getValueAt(i, 5).toString());
        String sex = model.getValueAt(i, 6).toString();
        cmbSex.setSelectedItem(sex);
        txtPhoneNumber.setText(model.getValueAt(i, 7).toString());
    }//GEN-LAST:event_tblStudentMouseClicked

    private void btnUpdateSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSActionPerformed
        // TODO add your handling code here:
        int rs = updateStudent();
        if (rs == 1) {
            showStudent();
            reset();
        }
    }//GEN-LAST:event_btnUpdateSActionPerformed

    private void btnDeleteSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSActionPerformed
        // TODO add your handling code here:
        deleteStudent();
        showStudent();
        reset();
    }//GEN-LAST:event_btnDeleteSActionPerformed

    private void btnAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAscActionPerformed
        // TODO add your handling code here:
        int order = cmbOrder.getSelectedIndex();
        showStudent(convertOrder(order), "ASC");
    }//GEN-LAST:event_btnAscActionPerformed

    private void btnDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescActionPerformed
        // TODO add your handling code here:
        int order = cmbOrder.getSelectedIndex();
        showStudent(convertOrder(order), "DESC");
    }//GEN-LAST:event_btnDescActionPerformed

    private void btnTeacherMagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTeacherMagActionPerformed
        Table.setVisible(false);
        //pnlTeacherMag.setVisible(true);
        pnlTeacherManagement.setVisible(true);
        pnlSubjectManagement.setVisible(false);
        pnlMarkManagement.setVisible(false);
        showTeacher();
        resetTc();
        dtcTcBirthday.setDate(new java.util.Date(System.currentTimeMillis()));
        showSubjectCode();
    }//GEN-LAST:event_btnTeacherMagActionPerformed

    private void btnStudentMagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentMagActionPerformed
        // TODO add your handling code here:
        Table.setVisible(true);
        //pnlTeacherMag.setVisible(false);
        pnlTeacherManagement.setVisible(false);
        pnlSubjectManagement.setVisible(false);
        pnlClassManagement.setVisible(false);
        pnlMarkManagement.setVisible(false);
    }//GEN-LAST:event_btnStudentMagActionPerformed

    private void tblTeacherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTeacherMouseClicked
        // TODO add your handling code here:
        int i = tblTeacher.getSelectedRow();
        TableModel model = tblTeacher.getModel();
        txtTeacherCode.setText(model.getValueAt(i, 0).toString());
        txtTcName.setText(model.getValueAt(i, 1).toString());
        String classCode = model.getValueAt(i, 3).toString();
        cmbClCode.setSelectedItem(classCode);
        String subjectCode = model.getValueAt(i, 2).toString();
        cmbSubjectCode.setSelectedItem(subjectCode);
        //String birthday = model.getValueAt(i, 4).toString();
        //dtcBirthday.setDateFormatString(birthday);
        dtcTcBirthday.setDate((Date) model.getValueAt(i, 4));
        txtEmail.setText(model.getValueAt(i, 6).toString());
        String sex = model.getValueAt(i, 5).toString();
        cmbTcSex.setSelectedItem(sex);
        txtTcPhoneNumber.setText(model.getValueAt(i, 7).toString());
    }//GEN-LAST:event_tblTeacherMouseClicked

    private void txtTeacherCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeacherCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeacherCodeActionPerformed

    private void btnAddTcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTcActionPerformed
        // TODO add your handling code here:
        int rs = addTeacher();
        if (rs > 0) {
            showTeacher();
            resetTc();
        }
    }//GEN-LAST:event_btnAddTcActionPerformed

    private void btnUpdateTcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTcActionPerformed
        // TODO add your handling code here:
        int rs = updateTeacher();
        if (rs > 0) {
            showTeacher();
            resetTc();
        }
    }//GEN-LAST:event_btnUpdateTcActionPerformed

    private void btnDeleteTcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTcActionPerformed
        // TODO add your handling code here:
        int rs = deleteTeacher();
        if (rs > 0) {
            showTeacher();
            resetTc();
        }
    }//GEN-LAST:event_btnDeleteTcActionPerformed

    private void btnResetTcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetTcActionPerformed
        // TODO add your handling code here:
        resetTc();
    }//GEN-LAST:event_btnResetTcActionPerformed

    private void btnTcAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTcAscActionPerformed
        // TODO add your handling code here:
        int order = cmbTcOrder.getSelectedIndex();
        showTeacher(convertOrder_tc(order), "ASC");
    }//GEN-LAST:event_btnTcAscActionPerformed

    private void btnTcDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTcDescActionPerformed
        // TODO add your handling code here:
        int order = cmbTcOrder.getSelectedIndex();
        showTeacher(convertOrder_tc(order), "DESC");
    }//GEN-LAST:event_btnTcDescActionPerformed

    private void tblSubjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSubjectMouseClicked
        // TODO add your handling code here:
        int i = tblSubject.getSelectedRow();
        TableModel model = tblSubject.getModel();
        txtSubjectCode.setText(model.getValueAt(i, 1).toString());
        txtSubjectName.setText(model.getValueAt(i, 2).toString());
        txtCredit.setText(model.getValueAt(i, 3).toString());
    }//GEN-LAST:event_tblSubjectMouseClicked

    private void txtSubjectCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubjectCodeActionPerformed

    private void btnAddSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSuActionPerformed
        // TODO add your handling code here:
        int rs = addSubject();
        if (rs > 0) {
            showSubject();
            resetSu();
        }
    }//GEN-LAST:event_btnAddSuActionPerformed

    private void btnUpdateSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSuActionPerformed
        // TODO add your handling code here:
        int rs = updateSubject();
        if (rs > 0) {
            showSubject();
            resetSu();
        }
    }//GEN-LAST:event_btnUpdateSuActionPerformed

    private void btnDeleteSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSuActionPerformed
        // TODO add your handling code here:
        int rs = deleteSubject();
        if (rs > 0) {
            showSubject();
            resetSu();
        }
    }//GEN-LAST:event_btnDeleteSuActionPerformed

    private void btnResetSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSuActionPerformed
        // TODO add your handling code here:
        resetSu();
    }//GEN-LAST:event_btnResetSuActionPerformed

    private void btnSubjectMagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubjectMagActionPerformed
        // TODO add your handling code here:
        Table.setVisible(false);
        pnlTeacherManagement.setVisible(false);
        pnlSubjectManagement.setVisible(true);
        pnlClassManagement.setVisible(false);
        pnlMarkManagement.setVisible(false);
        resetSu();
        showSubject();
    }//GEN-LAST:event_btnSubjectMagActionPerformed

    private void btnLookSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookSuActionPerformed
        // TODO add your handling code here:
        showSubjectLookup();
    }//GEN-LAST:event_btnLookSuActionPerformed

    private void btnLookTcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookTcActionPerformed
        // TODO add your handling code here:
        showTeacher();
    }//GEN-LAST:event_btnLookTcActionPerformed

    private void btnLookStActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookStActionPerformed
        // TODO add your handling code here:
        showStudent();
    }//GEN-LAST:event_btnLookStActionPerformed

    private void tblClassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClassMouseClicked
        // TODO add your handling code here:
        TableModel model = tblClass.getModel();
        int i = tblClass.getSelectedRow();
        txtClassCode.setText(model.getValueAt(i, 1).toString());
        txtClassName.setText(model.getValueAt(i, 2).toString());
        txtCourse.setText(model.getValueAt(i, 3).toString());
    }//GEN-LAST:event_tblClassMouseClicked

    private void txtClassCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClassCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClassCodeActionPerformed

    private void btnAddClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClActionPerformed
        // TODO add your handling code here:
        int rs = addClass();
        if (rs > 0) {
            showClass();
            resetCl();
        }
    }//GEN-LAST:event_btnAddClActionPerformed

    private void btnUpdateClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateClActionPerformed
        // TODO add your handling code here:
        int rs = updateClass();
        if (rs > 0) {
            showClass();
            resetCl();
        }
    }//GEN-LAST:event_btnUpdateClActionPerformed

    private void btnDeleteClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteClActionPerformed
        // TODO add your handling code here:
        int rs = deleteClass();
        if (rs > 0) {
            showClass();
            resetCl();
        }
    }//GEN-LAST:event_btnDeleteClActionPerformed

    private void btnResetClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetClActionPerformed
        // TODO add your handling code here:
        resetCl();
    }//GEN-LAST:event_btnResetClActionPerformed

    private void btnLookClActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookClActionPerformed
        // TODO add your handling code here:
        showClass();
    }//GEN-LAST:event_btnLookClActionPerformed

    private void btnClassMagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClassMagActionPerformed
        // TODO add your handling code here:
        Table.setVisible(false);
        pnlTeacherManagement.setVisible(false);
        pnlSubjectManagement.setVisible(false);
        pnlClassManagement.setVisible(true);
        pnlMarkManagement.setVisible(false);
        showClass();
    }//GEN-LAST:event_btnClassMagActionPerformed

    private void btnRegisterClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterClassActionPerformed
        // TODO add your handling code here:
        TableModel model = tblDynamicClass.getModel();
        int i = tblDynamicClass.getSelectedRow();
        if(i >= 0){
            String dcCode = model.getValueAt(i, 0).toString();
        String studentCode = session.getUserName();
        String subjectName = model.getValueAt(i, 2).toString();
        String teacherName = model.getValueAt(i, 3).toString();
        classDAO.addRealClass(dcCode, studentCode, subjectName, teacherName);
        int markQuantity = 1;
        int regularMark1 = 0;
        int regularMark2 = 0;
        int regulerMark3 = 0;
        float examMark = 0;
        Mark mark = new Mark(markQuantity, regularMark1, regularMark2, regulerMark3, examMark, studentCode, dcCode, subjectName);
        markDAO.addMark(mark);
        showRealClass();
        }else{
            JOptionPane.showMessageDialog(this, "Phải chọn 1 môn để đăng kí!");
        }
    }//GEN-LAST:event_btnRegisterClassActionPerformed

    private void btnDisposeClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisposeClassActionPerformed
        // TODO add your handling code here:
        TableModel model = tblRealClass.getModel();
        int i = tblRealClass.getSelectedRow();
        String studentCode = session.getUserName();
        String dcCode = model.getValueAt(i, 0).toString();
        classDAO.deleteRealClass(dcCode, studentCode);
        markDAO.deleteMark(studentCode, dcCode);
        showRealClass();
    }//GEN-LAST:event_btnDisposeClassActionPerformed

    private void tblMarkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMarkMouseClicked
        // TODO add your handling code here:
        TableModel model = tblMark.getModel();
        int i = tblMark.getSelectedRow();
        txtStudentCode_m.setText(model.getValueAt(i, 0).toString());
        txtStudentName.setText(model.getValueAt(i, 1).toString());
        txtSuName.setText(model.getValueAt(i, 3).toString());
        txtMarkQuantity.setText(model.getValueAt(i, 4).toString());
        txtRMark1.setText(model.getValueAt(i, 5).toString());
        txtRMark2.setText(model.getValueAt(i, 6).toString());
        txtRMark3.setText(model.getValueAt(i, 7).toString());
        txtExamMark.setText(model.getValueAt(i, 8).toString());
    }//GEN-LAST:event_tblMarkMouseClicked

    private void btnMarkMagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarkMagActionPerformed
        // TODO add your handling code here:
        pnlClassManagement.setVisible(false);
        pnlSubjectManagement.setVisible(false);
        Table.setVisible(false);
        pnlTeacherManagement.setVisible(false);
        pnlMarkManagement.setVisible(true);
        showMark();
    }//GEN-LAST:event_btnMarkMagActionPerformed

    private void btnUpdateMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateMarkActionPerformed
        // TODO add your handling code here:
        int rs = updateMark();
        if (rs > 0) {
            showMark();
            resetMark();
        }
    }//GEN-LAST:event_btnUpdateMarkActionPerformed

    private void tblMarkForCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMarkForCheckMouseClicked
        // TODO add your handling code here:
        TableModel model = tblMarkForCheck.getModel();
        int i = tblMarkForCheck.getSelectedRow();
        txtReClassName.setText(model.getValueAt(i, 0).toString());
    }//GEN-LAST:event_tblMarkForCheckMouseClicked

    private void btnLookMyMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLookMyMarkActionPerformed
        // TODO add your handling code here:
        tblMarkForCheck.setVisible(true);
        tblMarkByClass.setVisible(false);
        pnlMarkTable.setVisible(true);
        pnlMarkClass.setVisible(false);
        showMarkForCheck();
    }//GEN-LAST:event_btnLookMyMarkActionPerformed

    private void btnCheckMarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckMarkActionPerformed
        // TODO add your handling code here:
        tblMarkForCheck.setVisible(false);
        tblMarkByClass.setVisible(true);
        pnlMarkTable.setVisible(false);
        pnlMarkClass.setVisible(true);
        String subjectName = txtReClassName.getText();
        showMarkBySuName(subjectName);
    }//GEN-LAST:event_btnCheckMarkActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String userName = txtUserName.getText();
        String password = String.valueOf(pasPassword.getPassword());
        if (userName.equals("")) {
            JOptionPane.showMessageDialog(this, "Đăng nhập thất bại, tên đăng nhập không được để trống!", "Lỗi đăng nhập", 1);
        } else {
            if (password.equals("")) {
                JOptionPane.showMessageDialog(this, "Đăng nhập thất bại, mật khẩu không được để trống!", "Lỗi đăng nhập", 1);
            } else {
                session = login(userName, password);
                if (session == null) {
                    JOptionPane.showMessageDialog(this, "Đăng nhập thất bại, sai tên tài khoản hoặc mật khẩu!", "Lỗi đăng nhập", 1);
                }else{
                    JOptionPane.showMessageDialog(this, "Đăng nhập thành công!, chào mừng "+session.getFullName()+"");
                    if(session.getPosition().equals("sv")){
                        jTabbedPane1.setEnabledAt(1, true);
                        jTabbedPane1.setEnabledAt(2, true);
                        lblGreetStu.setText("Xin chào: " + session.getFullName());
                        showRealClass();
                        showMarkForCheck();
                    }
                    if(session.getPosition().equals("gv")){
                        jTabbedPane1.setEnabledAt(3, true);
                        btnClassMag.setEnabled(false);
                        btnSubjectMag.setEnabled(false);
                        btnStudentMag.setEnabled(false);
                        btnTeacherMag.setEnabled(false);
                        btnMarkMag.setEnabled(true);
                        pnlMarkManagement.setVisible(true);
                        pnlSubjectManagement.setVisible(false);
                        Table.setVisible(false);
                        pnlClassManagement.setVisible(false);
                        pnlTeacherManagement.setVisible(false);
                        lblGreetMag.setText("Xin chào: " + session.getFullName());
                    }
                    if(session.getPosition().equals("admin")){
                        jTabbedPane1.setEnabledAt(3, true);
                        btnMarkMag.setEnabled(false);
                        btnClassMag.setEnabled(true);
                        btnSubjectMag.setEnabled(true);
                        btnStudentMag.setEnabled(true);
                        btnTeacherMag.setEnabled(true);
                        pnlMarkManagement.setVisible(false);
                        pnlSubjectManagement.setVisible(true);
                        Table.setVisible(true);
                        pnlClassManagement.setVisible(true);
                        pnlTeacherManagement.setVisible(true);
                        lblGreetMag.setText("Xin chào: " + session.getFullName());
                    }
                    btnLogin.setEnabled(false);
                    txtUserName.setEditable(false);
                    pasPassword.setEditable(false);
                    btnLogout.setFocusable(true);
                    btnLogout.setEnabled(true);
                }
            }
        }
        txtUserName.setText("");
        pasPassword.setText("");
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn đăng xuất không","Cảnh báo đăng xuất", 1);
        if(option == 0){
            session = null;
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(2, false);
            jTabbedPane1.setEnabledAt(3, false);
            btnLogin.setEnabled(true);
            txtUserName.setEditable(true);
            pasPassword.setEditable(true);
            btnLogin.setFocusable(true);
        }
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StudentManager studentManager = new StudentManager();
                studentManager.setVisible(true);
                Toolkit tk = Toolkit.getDefaultToolkit();
                int xSize = (int) tk.getScreenSize().getWidth();
                int ySize = (int) tk.getScreenSize().getHeight();
                studentManager.setSize(xSize, ySize);
                studentManager.show();
                //showStudent();
                //initComponents();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Banner;
    private javax.swing.JPanel Centre;
    private javax.swing.JPanel ManagementControll;
    private javax.swing.JPanel Table;
    private javax.swing.JPanel Table1;
    private javax.swing.JButton btnAddCl;
    private javax.swing.JButton btnAddS;
    private javax.swing.JButton btnAddSu;
    private javax.swing.JButton btnAddTc;
    private javax.swing.JButton btnAsc;
    private javax.swing.JButton btnCheckMark;
    private javax.swing.JButton btnClassMag;
    private javax.swing.JButton btnDeleteCl;
    private javax.swing.JButton btnDeleteS;
    private javax.swing.JButton btnDeleteSu;
    private javax.swing.JButton btnDeleteTc;
    private javax.swing.JButton btnDesc;
    private javax.swing.JButton btnDisposeClass;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnLookCl;
    private javax.swing.JButton btnLookMyMark;
    private javax.swing.JButton btnLookSt;
    private javax.swing.JButton btnLookSu;
    private javax.swing.JButton btnLookTc;
    private javax.swing.JButton btnMarkMag;
    private javax.swing.JButton btnRegisterClass;
    private javax.swing.JButton btnResetCl;
    private javax.swing.JButton btnResetS;
    private javax.swing.JButton btnResetSu;
    private javax.swing.JButton btnResetTc;
    private javax.swing.JButton btnStudentMag;
    private javax.swing.JButton btnSubjectMag;
    private javax.swing.JButton btnTcAsc;
    private javax.swing.JButton btnTcDesc;
    private javax.swing.JButton btnTeacherMag;
    private javax.swing.JButton btnUpdateCl;
    private javax.swing.JButton btnUpdateMark;
    private javax.swing.JButton btnUpdateS;
    private javax.swing.JButton btnUpdateSu;
    private javax.swing.JButton btnUpdateTc;
    private javax.swing.JComboBox<String> cmbClCode;
    private javax.swing.JComboBox<String> cmbClassCode;
    private javax.swing.JComboBox<String> cmbEduSystem;
    private javax.swing.JComboBox<String> cmbOrder;
    private javax.swing.JComboBox<String> cmbSex;
    private javax.swing.JComboBox<String> cmbSubjectCode;
    private javax.swing.JComboBox<String> cmbTcOrder;
    private javax.swing.JComboBox<String> cmbTcSex;
    private com.toedter.calendar.JDateChooser dtcBirthday;
    private com.toedter.calendar.JDateChooser dtcTcBirthday;
    private javax.swing.JPanel inforUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblGreetMag;
    private javax.swing.JLabel lblGreetStu;
    private javax.swing.JPasswordField pasPassword;
    private javax.swing.JPanel pnlClassManagement;
    private javax.swing.JPanel pnlIndex;
    private javax.swing.JPanel pnlLookMark;
    private javax.swing.JPanel pnlManagement;
    private javax.swing.JPanel pnlMarkClass;
    private javax.swing.JPanel pnlMarkManagement;
    private javax.swing.JPanel pnlMarkTable;
    private javax.swing.JPanel pnlRegisterClass;
    private javax.swing.JPanel pnlSubjectManagement;
    private javax.swing.JPanel pnlTeacherManagement;
    private javax.swing.JTable tblClass;
    private javax.swing.JTable tblDynamicClass;
    private javax.swing.JTable tblMark;
    private javax.swing.JTable tblMarkByClass;
    private javax.swing.JTable tblMarkForCheck;
    private javax.swing.JTable tblRealClass;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTable tblSubject;
    private javax.swing.JTable tblTeacher;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtClassCode;
    private javax.swing.JTextField txtClassName;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtCredit;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtExamMark;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtLookCl;
    private javax.swing.JTextField txtLookSu;
    private javax.swing.JTextField txtLookTc;
    private javax.swing.JTextField txtMarkQuantity;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtRMark1;
    private javax.swing.JTextField txtRMark2;
    private javax.swing.JTextField txtRMark3;
    private javax.swing.JTextField txtReClassName;
    private javax.swing.JTextField txtStLookup;
    private javax.swing.JTextField txtStudentCode;
    private javax.swing.JTextField txtStudentCode_m;
    private javax.swing.JTextField txtStudentName;
    private javax.swing.JTextField txtSuName;
    private javax.swing.JTextField txtSubjectCode;
    private javax.swing.JTextField txtSubjectName;
    private javax.swing.JTextField txtTcName;
    private javax.swing.JTextField txtTcPhoneNumber;
    private javax.swing.JTextField txtTeacherCode;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables

    private void showComboData() {
        cmbClassCode.removeAllItems();
        List<String> data = classDAO.getClassCode();
        for (String classCode : data) {
            cmbClassCode.addItem(classCode);
        }
    }

    private void showSubjectCode() {
        cmbSubjectCode.removeAllItems();
        List<String> data = subjectDAO.getSubjectCode();
        for (String sbCode : data) {
            cmbSubjectCode.addItem(sbCode);
        }
    }

    private void showClassCode() {
        cmbClCode.removeAllItems();
        List<String> data = classDAO.getClassCode();
        for (String classCode : data) {
            cmbClCode.addItem(classCode);
        }
    }

    private void showStudent() {
        String stLook = txtStLookup.getText();
        ArrayList<Student> listSt = studentDAO.listAllStudent(stLook);

        tableModel.setRowCount(0);
        for (Student student : listSt) {
            tableModel.addRow(new Object[]{student.getStudentCode(), student.getFullName(), student.getClassCode(),
                student.getEduSystem(), student.getBirthday(), student.getAddress(), student.isSex() == true ? "Nam" : "Nữ", student.getPhoneNumber(), "abc"});
        }
    }

    private void showStudent(String orderBy, String criteria) {
        String stName = txtStLookup.getText();
        ArrayList<Student> listSt = studentDAO.listAllStudent(orderBy, criteria, stName);

        tableModel.setRowCount(0);
        for (Student student : listSt) {
            tableModel.addRow(new Object[]{student.getStudentCode(), student.getFullName(), student.getClassCode(),
                student.getEduSystem(), student.getBirthday(), student.getAddress(), student.isSex() == true ? "Nam" : "Nữ", student.getPhoneNumber()});
        }
    }

    private int addStudent() {
        int rs = 0;
        String studentCode = txtStudentCode.getText();
        String fullName = txtFullName.getText();
        String classCode = (String) cmbClassCode.getSelectedItem();
//        int clcIndex = cmbClassCode.getSelectedIndex();
//        if(clcIndex > 0){
//            classCode = cmbClassCode.getItemAt(clcIndex);
//        }
        String eduSystem = (String) cmbEduSystem.getSelectedItem();
        //java.util.Date date = new 
        Date birthday = new Date(dtcBirthday.getCalendar().getTimeInMillis());
        String address = txtAddress.getText();
        String gt = (String) cmbSex.getSelectedItem();
        boolean sex = "Nam".equals(gt);
        String phoneNumber = txtPhoneNumber.getText();

        if (Pattern.matches("[s][v]\\d{3}", studentCode)) {
            if ("".equals(fullName)) {
                JOptionPane.showMessageDialog(this, "Tên sinh viên không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (checkBirthday(birthday)) {
                    if ("".equals(address)) {
                        JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        if (Pattern.matches("[0]\\d{9}", phoneNumber)) {
                            
                            if(!checkStudentCode(studentCode)){
                                Student st = new Student(studentCode, fullName, classCode, eduSystem, address, phoneNumber, sex, birthday);
                                rs = studentDAO.addStudent(st);
                            }else{
                                JOptionPane.showMessageDialog(this, "Trùng mã sinh viên!", "Lỗi dữ liệu đầu vào", 1);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Số điện thoại phải bắt đầu bằng 0 và dài 10 số", "Lỗi dữ liệu đầu vào", 1);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ngày sinh phải trước 1-1-2002", "Lỗi dữ liệu đầu vào", 1);
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Mã sinh viên phải bắt đầu bằng sv và theo sau là 3 số", "Lỗi dữ liệu đầu vào", 1);
        }
        return rs;
    }

    private int updateStudent() {
        int rs = 0;
        String studentCode = txtStudentCode.getText();
        String fullName = txtFullName.getText();
        String classCode = (String) cmbClassCode.getSelectedItem();
//        int clcIndex = cmbClassCode.getSelectedIndex();
//        if(clcIndex > 0){
//            classCode = cmbClassCode.getItemAt(clcIndex);
//        }
        String eduSystem = (String) cmbEduSystem.getSelectedItem();
        //java.util.Date date = new 
        Date birthday = new Date(dtcBirthday.getCalendar().getTimeInMillis());
        String address = txtAddress.getText();
        String gt = (String) cmbSex.getSelectedItem();
        boolean sex = "Nam".equals(gt);
        String phoneNumber = txtPhoneNumber.getText();
        if (Pattern.matches("[s][v]\\d{3}", studentCode)) {
            if ("".equals(fullName)) {
                JOptionPane.showMessageDialog(this, "Tên sinh viên không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (checkBirthday(birthday)) {
                    if ("".equals(address)) {
                        JOptionPane.showMessageDialog(this, "Địa chỉ không được để trống", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        if (Pattern.matches("[0]\\d{9}", phoneNumber)) {
                            if(!checkStudentCode(studentCode)){
                                Student st = new Student(studentCode, fullName, classCode, eduSystem, address, phoneNumber, sex, birthday);
                                rs = studentDAO.updateStudent(st);
                            }else{
                                JOptionPane.showMessageDialog(this, "Trùng mã sinh viên!", "Lỗi dữ liệu đầu vào", 1);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Số điện thoại phải bắt đầu bằng 0 và dài 10 số", "Lỗi dữ liệu đầu vào", 1);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ngày sinh phải trước 1-1-2002", "Lỗi dữ liệu đầu vào", 1);
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Mã sinh viên phải bắt đầu bằng sv và theo sau là 3 số", "Lỗi dữ liệu đầu vào", 1);
        }
        return rs;
    }

    private void deleteStudent() {
        String studentCode = txtStudentCode.getText();
        String fullName = txtFullName.getText();
        int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sinh viên " + fullName + " không?", "Xóa sinh viên", 1);
        if (option == 0) {
            studentDAO.deleteStudent(studentCode);
        }
    }

    private boolean checkBirthday(Date birthday) {
        long age = birthday.getTime();
        Date minDay = new Date(102, 0, 1);
        long minAge = minDay.getTime();
        boolean rs = false;
        if (age < minAge) {
            rs = true;
        }
        return rs;
    }

    private void reset() {
        txtStudentCode.setText("");
        txtFullName.setText("");
        cmbClassCode.setSelectedIndex(0);
        cmbEduSystem.setSelectedIndex(0);
        txtAddress.setText("");
        cmbSex.setSelectedItem("Nam");
        txtPhoneNumber.setText("");
    }

    private String convertOrder(int i) {
        String rs = "";
        switch (i) {
            case 0:
                rs = "studentCode";
                break;
            case 1:
                rs = "fullName";
                break;
            case 2:
                rs = "classCode";
                break;
            case 3:
                rs = "birthday";
                break;
            case 4:
                rs = "sex";
        }
        return rs;
    }

    //method of panel teacher
    private void showTeacher() {
        DefaultTableModel tableModelTc = (DefaultTableModel) tblTeacher.getModel();
        String tcLookName = txtLookTc.getText();
        ArrayList<Teacher> listTc = teacherDAO.listAllTeacher(tcLookName);
        tableModelTc.setRowCount(0);
        for (Teacher tc : listTc) {
            tableModelTc.addRow(new Object[]{tc.getTeacherCode(), tc.getFullName(), tc.getSubjectCode(), tc.getClassCode(),
                tc.getBirthday(), tc.isSex() == true ? "Nam" : "Nữ", tc.getEmail(), tc.getPhoneNumber()});
        }
    }

    private void showTeacher(String order, String criteria) {
        DefaultTableModel tableModelTc = (DefaultTableModel) tblTeacher.getModel();
        String tcName = txtLookTc.getText();
        ArrayList<Teacher> listTc = teacherDAO.listAllTeacher(order, criteria, tcName);
        tableModelTc.setRowCount(0);
        for (Teacher tc : listTc) {
            tableModelTc.addRow(new Object[]{tc.getTeacherCode(), tc.getFullName(), tc.getSubjectCode(), tc.getClassCode(),
                tc.getBirthday(), tc.isSex() == true ? "Nam" : "Nữ", tc.getEmail(), tc.getPhoneNumber()});
        }
    }

    private int addTeacher() {
        int rs = 0;
        String teacherCode = txtTeacherCode.getText();
        String fullName = txtTcName.getText();
        String clCode = (String) cmbClCode.getSelectedItem();
//        int clcIndex = cmbClassCode.getSelectedIndex();
//        if(clcIndex > 0){
//            classCode = cmbClassCode.getItemAt(clcIndex);
//        }
        String subjectCode = (String) cmbSubjectCode.getSelectedItem();
        //java.util.Date date = new 
        Date birthday = new Date(dtcTcBirthday.getCalendar().getTimeInMillis());
        String email = txtEmail.getText();
        String gt = (String) cmbTcSex.getSelectedItem();
        boolean sex = "Nam".equals(gt);
        String phoneNumber = txtTcPhoneNumber.getText();

        if (Pattern.matches("[g][v]\\d{3}", teacherCode)) {
            if ("".equals(fullName)) {
                JOptionPane.showMessageDialog(this, "Tên giáo viên không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (checkBirthday(birthday)) {
                    if ("".equals(email)) {
                        JOptionPane.showMessageDialog(this, "Email không được để trống", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        if (Pattern.matches("[0]\\d{9}", phoneNumber)) {
                            if(!checkTcCode(teacherCode)){
                                Teacher tc = new Teacher(teacherCode, fullName, subjectCode, clCode, email, phoneNumber, birthday, sex);
                                rs = teacherDAO.addTeacher(tc);
                            }else{
                                JOptionPane.showMessageDialog(this, "Trùng mã giáo viên!", "Lỗi dữ liệu đầu vào", 1);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Số điện thoại phải bắt đầu bằng 0 và dài 10 số", "Lỗi dữ liệu đầu vào", 1);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ngày sinh phải trước 1-1-2002", "Lỗi dữ liệu đầu vào", 1);
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Mã giáo viên phải bắt đầu bằng gv và theo sau là 3 số", "Lỗi dữ liệu đầu vào", 1);
        }
        return rs;
    }

    private void resetTc() {
        txtTeacherCode.setText("");
        txtTcName.setText("");
        cmbClCode.setSelectedIndex(0);
        cmbSubjectCode.setSelectedIndex(0);
        txtEmail.setText("");
        cmbTcSex.setSelectedItem("Nam");
        txtTcPhoneNumber.setText("");
    }

    private int updateTeacher() {
        int rs = 0;
        String teacherCode = txtTeacherCode.getText();
        String fullName = txtTcName.getText();
        String clCode = (String) cmbClCode.getSelectedItem();
//        int clcIndex = cmbClassCode.getSelectedIndex();
//        if(clcIndex > 0){
//            classCode = cmbClassCode.getItemAt(clcIndex);
//        }
        String subjectCode = (String) cmbSubjectCode.getSelectedItem();
        //java.util.Date date = new 
        Date birthday = new Date(dtcTcBirthday.getCalendar().getTimeInMillis());
        String email = txtEmail.getText();
        String gt = (String) cmbTcSex.getSelectedItem();
        boolean sex = "Nam".equals(gt);
        String phoneNumber = txtTcPhoneNumber.getText();

        if (Pattern.matches("[g][v]\\d{3}", teacherCode)) {
            if ("".equals(fullName)) {
                JOptionPane.showMessageDialog(this, "Tên giáo viên không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (checkBirthday(birthday)) {
                    if ("".equals(email)) {
                        JOptionPane.showMessageDialog(this, "Email không được để trống", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        if (Pattern.matches("[0]\\d{9}", phoneNumber)) {
                            if(!checkTcCode(teacherCode)){
                                Teacher tc = new Teacher(teacherCode, fullName, subjectCode, clCode, email, phoneNumber, birthday, sex);
                                rs = teacherDAO.updateTeacher(tc);
                            }else{
                                JOptionPane.showMessageDialog(this, "Trùng mã giáo viên!", "Lỗi dữ liệu đầu vào", 1);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Số điện thoại phải bắt đầu bằng 0 và dài 10 số", "Lỗi dữ liệu đầu vào", 1);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Ngày sinh phải trước 1-1-2002", "Lỗi dữ liệu đầu vào", 1);
                }

            }

        } else {
            JOptionPane.showMessageDialog(this, "Mã giáo viên phải bắt đầu bằng gv và theo sau là 3 số", "Lỗi dữ liệu đầu vào", 1);
        }
        return rs;
    }

    private int deleteTeacher() {
        int rs = 0;
        String teacherCode = txtTeacherCode.getText();
        String fullName = txtTcName.getText();
        int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa giáo viên " + fullName + " không?", "Xóa giáo viên", 1);
        if (option == 0) {
            rs = teacherDAO.deleteTeacher(teacherCode);
        }
        return rs;
    }

    private String convertOrder_tc(int i) {
        String rs = "";
        switch (i) {
            case 0:
                rs = "teacherCode";
                break;
            case 1:
                rs = "fullName";
                break;
            case 2:
                rs = "subjectCode";
                break;
            case 3:
                rs = "classCode";
                break;
            case 4:
                rs = "birthday";
                break;
            case 5:
                rs = "sex";
                break;
        }
        return rs;
    }

    //method of panel Subject
    private void showSubject() {
        DefaultTableModel tableModelSbj = (DefaultTableModel) tblSubject.getModel();
        ArrayList<Subject> sbj = subjectDAO.listAllSubject();
        tableModelSbj.setRowCount(0);
        for (Subject sb : sbj) {
            tableModelSbj.addRow(new Object[]{sb.getSuId(), sb.getSubjectCode(), sb.getSubjectName(), sb.getCredits()});
        }
    }

    private void resetSu() {
        txtSubjectCode.setText("");
        txtSubjectName.setText("");
        txtCredit.setText("");
    }

    private int addSubject() {
        String subjectCode = txtSubjectCode.getText();
        String subjectName = txtSubjectName.getText();
        String crd = txtCredit.getText();
        int rs = 0;
        if (subjectCode.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã môn không được để trống", "Lỗi dữ liệu đầu vào", 1);
        } else {
            if (subjectName.equals("")) {
                JOptionPane.showMessageDialog(this, "Tên môn không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (!Pattern.matches("\\d+", crd)) {
                    JOptionPane.showMessageDialog(this, "Số tín chỉ phải là số lớn hơn 0", "Lỗi dữ liệu đầu vào", 1);
                } else {
                    int credits = Integer.parseInt(crd);
                    if (credits <= 0) {
                        JOptionPane.showMessageDialog(this, "Số tín chỉ phải là số lớn hơn 0", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        Subject su = new Subject(subjectCode, subjectName, credits);
                        rs = subjectDAO.addSubject(su);
                    }
                }
            }
        }
        return rs;
    }

    private int updateSubject() {
        String subjectCode = txtSubjectCode.getText();
        String subjectName = txtSubjectName.getText();
        String crd = txtCredit.getText();
        int rs = 0;
        if (subjectCode.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã môn không được để trống", "Lỗi dữ liệu đầu vào", 1);
        } else {
            if (subjectName.equals("")) {
                JOptionPane.showMessageDialog(this, "Tên môn không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (!Pattern.matches("\\d+", crd)) {
                    JOptionPane.showMessageDialog(this, "Số tín chỉ phải là số lớn hơn 0", "Lỗi dữ liệu đầu vào", 1);
                } else {
                    int credits = Integer.parseInt(crd);
                    if (credits <= 0) {
                        JOptionPane.showMessageDialog(this, "Số tín chỉ phải là số lớn hơn 0", "Lỗi dữ liệu đầu vào", 1);
                    } else {
                        TableModel model = tblSubject.getModel();
                        int i = tblSubject.getSelectedRow();
                        int suId = Integer.parseInt(model.getValueAt(i, 0).toString());
                        Subject su = new Subject(suId, subjectCode, subjectName, credits);
                        rs = subjectDAO.updateSubject(su);
                    }
                }
            }
        }
        return rs;
    }

    private int deleteSubject() {
        TableModel model = tblSubject.getModel();
        int rs = 0;
        int i = tblSubject.getSelectedRow();
        int suId = Integer.parseInt(model.getValueAt(i, 0).toString());
        String suName = txtSubjectName.getText();
        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa môn " + suName + " không?", "Xóa môn", 1);
        if (option == 0) {
            rs = subjectDAO.deleteSubject(suId);
        }
        return rs;
    }

    private void showSubjectLookup() {
        String sbjLookup = txtLookSu.getText();
        DefaultTableModel tableModelSbj = (DefaultTableModel) tblSubject.getModel();
        ArrayList<Subject> sbj = subjectDAO.listAllSubject(sbjLookup);
        tableModelSbj.setRowCount(0);
        for (Subject sb : sbj) {
            tableModelSbj.addRow(new Object[]{sb.getSuId(), sb.getSubjectCode(), sb.getSubjectName(), sb.getCredits()});
        }
    }

    //method of class
    private void showClass() {
        String clsLookup = txtLookCl.getText();
        DefaultTableModel tableModelCL = (DefaultTableModel) tblClass.getModel();
        ArrayList<Class> cl = classDAO.listAllClass(clsLookup);
        tableModelCL.setRowCount(0);
        for (Class cls : cl) {
            tableModelCL.addRow(new Object[]{cls.getCid(), cls.getClassCode(), cls.getClassName(), cls.getCourse()});
        }
    }

    private int addClass() {
        int n = 0;
        String classCode = txtClassCode.getText();
        String className = txtClassName.getText();
        String cou = txtCourse.getText();
        if (classCode.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã lớp không được để trống", "Lỗi dữ liệu đầu vào", 1);
        } else {
            if (className.equals("")) {
                JOptionPane.showMessageDialog(this, "Tên lớp không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (cou.equals("")) {
                    JOptionPane.showMessageDialog(this, "Khóa phải là số dương", "Lỗi dữ liệu đầu vào", 1);
                } else {

                    if (Pattern.matches("\\d+", cou)) {
                        int course = Integer.parseInt(cou);
                        Class cl = new Class(course, classCode, className);
                        n = classDAO.addClass(cl);
                    } else {
                        JOptionPane.showMessageDialog(this, "Khóa phải là số dương", "Lỗi dữ liệu đầu vào", 1);
                    }

                }
            }
        }
        return n;
    }

    private void resetCl() {
        txtClassCode.setText("");
        txtClassName.setText("");
        txtCourse.setText("");
    }

    private int updateClass() {
        int n = 0;

        String classCode = txtClassCode.getText();
        String className = txtClassName.getText();
        String cou = txtCourse.getText();
        if (classCode.equals("")) {
            JOptionPane.showMessageDialog(this, "Mã lớp không được để trống", "Lỗi dữ liệu đầu vào", 1);
        } else {
            if (className.equals("")) {
                JOptionPane.showMessageDialog(this, "Tên lớp không được để trống", "Lỗi dữ liệu đầu vào", 1);
            } else {
                if (cou.equals("")) {
                    JOptionPane.showMessageDialog(this, "Khóa phải là số dương", "Lỗi dữ liệu đầu vào", 1);
                } else {

                    if (Pattern.matches("\\d+", cou)) {
                        int course = Integer.parseInt(cou);
                        TableModel model = tblClass.getModel();
                        int i = tblClass.getSelectedRow();
                        int cid = Integer.parseInt(model.getValueAt(i, 0).toString());
                        Class cl = new Class(cid, course, classCode, className);
                        n = classDAO.updateClass(cl);
                    } else {
                        JOptionPane.showMessageDialog(this, "Khóa phải là số dương", "Lỗi dữ liệu đầu vào", 1);
                    }

                }
            }
        }
        return n;
    }

    private int deleteClass() {
        TableModel model = tblClass.getModel();
        int rs = 0;
        int i = tblClass.getSelectedRow();
        int cId = Integer.parseInt(model.getValueAt(i, 0).toString());
        String clName = txtClassName.getText();
        int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa lớp " + clName + " không?", "Xóa lớp", 1);
        if (option == 0) {
            rs = classDAO.deleteSubject(cId);
        }
        return rs;
    }

    //method of dangkyhocphan tabbedPane
    private void showDynamicClass() {
        DefaultTableModel model = (DefaultTableModel) tblDynamicClass.getModel();
        model.setRowCount(0);
        ResultSet rs = classDAO.listAllDynamicClass();
        try {
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5)});
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showRealClass() {
        DefaultTableModel model = (DefaultTableModel) tblRealClass.getModel();
        model.setRowCount(0);
        String studentCode = session.getUserName();
        ResultSet rs = classDAO.listAllRealClass(studentCode);
        try {
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(2), rs.getString(4), rs.getString(5)});
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void showMark() {
        DefaultTableModel model = (DefaultTableModel) tblMark.getModel();
        model.setRowCount(0);
        String teacherName = session.getFullName();
        String subjectCode = teacherDAO.getSubjectCode(teacherName);
        String subjectName = subjectDAO.getName(subjectCode);
        ArrayList<Mark> mark = markDAO.listAllMark(subjectName);

        for (Mark m : mark) {
            String studentName = studentDAO.getStudentName(m.getStudentCode());
            model.addRow(new Object[]{m.getStudentCode(), studentName, m.getDcCode(), m.getSubjectName(), m.getMarkQuantity(), m.getRegularMark1(),
                m.getRegularMark2(), m.getRegularMark3(), m.getExamMark(), m.getSumMark(), m.isPass() ? "Qua" : "Học lại"});
        }
    }

    private int updateMark() {
        int n = 0;
        String studentCode = txtStudentCode_m.getText();
        String subjectName = txtSuName.getText();
        String dcCode = classDAO.getDcCodebySubName(subjectName);
        if (Pattern.matches("\\d+", txtMarkQuantity.getText()) && Integer.parseInt(txtMarkQuantity.getText()) <= 3) {
            int markQuantity = Integer.parseInt(txtMarkQuantity.getText());
            if (testRMark(txtRMark1.getText()) && testRMark(txtRMark2.getText()) && testRMark(txtRMark3.getText())) {
                int rmark1 = Integer.parseInt(txtRMark1.getText());
                int rmark2 = Integer.parseInt(txtRMark2.getText());
                int rmark3 = Integer.parseInt(txtRMark3.getText());
                if (testEMark(txtExamMark.getText()) || testRMark(txtExamMark.getText())) {
                    float examMark = Float.parseFloat(txtExamMark.getText());
                    Mark mark = new Mark(markQuantity, rmark1, rmark2, rmark3, examMark, studentCode, dcCode, subjectName);
                    n = markDAO.updateMark(mark);
                } else {
                    JOptionPane.showMessageDialog(this, "Điểm kiểm tra trong khoảng 0.0-10.0", "Lỗi dữ liệu đầu vào", 1);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Điểm thành phần trong khoảng 0-10", "Lỗi dữ liệu đầu vào", 1);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Số lượng điểm thành phần trong khoảng 0-3", "Lỗi dữ liệu đầu vào", 1);
        }

        return n;
    }

    private void resetMark() {
        txtRMark1.setText("");
        txtRMark2.setText("");
        txtRMark3.setText("");
        txtMarkQuantity.setText("");
        txtSuName.setText("");
        txtStudentCode_m.setText("");
        txtStudentName.setText("");
        txtExamMark.setText("");
    }

    private boolean testRMark(String text) {
        if (Pattern.matches("\\d+", text) && Integer.parseInt(text) <= 10) {
            return true;
        } else {
            return false;
        }
    }

    private boolean testEMark(String text) {
        if (Pattern.matches("[0-9]+.[0-9]", text) && Float.parseFloat(text) <= 10.0) {
            return true;
        } else {
            return false;
        }
    }

    //method of check mark
    private void showMarkForCheck() {
        DefaultTableModel model = (DefaultTableModel) tblMarkForCheck.getModel();
        model.setRowCount(0);
        String studentCode = session.getUserName();
        ArrayList<Mark> listMark = markDAO.listMarkByStudentCode(studentCode);
        for (Mark m : listMark) {
            model.addRow(new Object[]{m.getSubjectName(), m.getMarkQuantity(), m.getRegularMark1(), m.getRegularMark2(), m.getRegularMark3(), m.getExamMark(), m.getSumMark(), m.isPass() ? "Qua" : "Học lại"});
        }
    }

    private void showMarkBySuName(String subjectName) {
        if (subjectName.equals("")) {
            JOptionPane.showMessageDialog(this, "Tên lớp còn trống!", "Lỗi dữ liệu", 1);
        } else {
            DefaultTableModel model = (DefaultTableModel) tblMarkByClass.getModel();
            model.setRowCount(0);

            ArrayList<Mark> listMark = markDAO.listMarkByClass(subjectName);
            for (Mark m : listMark) {
                model.addRow(new Object[]{m.getStudentCode(), m.getMarkQuantity(), m.getRegularMark1(), m.getRegularMark2(), m.getRegularMark3(), m.getExamMark(), m.getSumMark(), m.isPass() ? "Qua" : "Học lại"});
            }
        }

    }

    private Account login(String userName, String password) {
        Account acc = null;
        acc = accountDAO.login(userName, password);
        return acc;
    }

    private boolean checkStudentCode(String studentCode) {
        ArrayList<String> stCode = studentDAO.getStCode();
        boolean check = false;
        for(String st : stCode){
            if(st.equals(studentCode)){
                check = true;
            }
        }
        return check;
    }

    private boolean checkTcCode(String teacherCode) {
        ArrayList<String> tcCode = teacherDAO.getTcCode();
        boolean check = false;
        for(String tc : tcCode){
            if(tc.equals(teacherCode)){
                check = true;
            }
        }
        return check;
    }
}
